#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by LINQ to SQL template for T4 C#
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;

namespace Linq2SqlGeography.LinqSql.FromAbis
{
	[DatabaseAttribute(Name=@"SqlSpatialJiangmeng")]
	public partial class DataClasses1DataContext : DataContext
	{
		private static MappingSource mappingSource = new AttributeMappingSource();
		
		#region Extensibility Method Definitions
		partial void OnCreated();
		partial void InsertAbis_Ho(Linq2SqlGeography.Abis_Ho instance);
		partial void UpdateAbis_Ho(Linq2SqlGeography.Abis_Ho instance);
		partial void DeleteAbis_Ho(Linq2SqlGeography.Abis_Ho instance);
		partial void InsertAbis_MR(Linq2SqlGeography.Abis_MR instance);
		partial void UpdateAbis_MR(Linq2SqlGeography.Abis_MR instance);
		partial void DeleteAbis_MR(Linq2SqlGeography.Abis_MR instance);
		#endregion
		
		#region Construction
		public DataClasses1DataContext() :
			base(global::Linq2SqlGeography.Properties.Settings.Default.SqlSpatialTestConnectionString, mappingSource)
		{
			OnCreated();
		}
	
		public DataClasses1DataContext(string connection) :
			base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) :
			base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, MappingSource mappingSource) :
			base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, MappingSource mappingSource) :
			base(connection, mappingSource)
		{
			OnCreated();
		}
		#endregion
		
		#region Tables
		public Table<Linq2SqlGeography.Abis_Ho> Abis_Ho
		{
			get { return GetTable<Linq2SqlGeography.Abis_Ho>(); }
		}
		
		public Table<Linq2SqlGeography.Abis_MR> Abis_MR
		{
			get { return GetTable<Linq2SqlGeography.Abis_MR>(); }
		}
		
		#endregion
	}
}

namespace Linq2SqlGeography
{	
	[Table(Name=@"dbo.Abis_Ho")]
	public partial class Abis_Ho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		#region Property Change Event Handling
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		public event PropertyChangingEventHandler PropertyChanging;
		public event PropertyChangedEventHandler PropertyChanged;
		
		public virtual void SendPropertyChanging()
		{
			if (PropertyChanging != null) {
				PropertyChanging(this, emptyChangingEventArgs);
			}
		}
			
		public virtual void SendPropertyChanged(String propertyName)
		{
			if (PropertyChanged != null) {
				PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		#endregion
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(ChangeAction action);
		#endregion

		#region Construction
		public Abis_Ho()
		{
		}
		#endregion

		#region Column Mappings
		partial void OnFileNumChanging(int? value);
		partial void OnFileNumChanged();
		private int? _FileNum;
		[Column(Storage=@"_FileNum", DbType=@"Int")]
		public int? FileNum
		{
			get { return _FileNum; }
			set {
				if (_FileNum != value) {
					OnFileNumChanging(value);
					SendPropertyChanging();
					_FileNum = value;
					SendPropertyChanged("FileNum");
					OnFileNumChanged();
				}
			}
		}
		
		partial void OnPacketNumChanging(int? value);
		partial void OnPacketNumChanged();
		private int? _PacketNum;
		[Column(Storage=@"_PacketNum", DbType=@"Int")]
		public int? PacketNum
		{
			get { return _PacketNum; }
			set {
				if (_PacketNum != value) {
					OnPacketNumChanging(value);
					SendPropertyChanging();
					_PacketNum = value;
					SendPropertyChanged("PacketNum");
					OnPacketNumChanged();
				}
			}
		}
		
		partial void OnBeginFrameNumChanging(int? value);
		partial void OnBeginFrameNumChanged();
		private int? _BeginFrameNum;
		[Column(Storage=@"_BeginFrameNum", DbType=@"Int")]
		public int? BeginFrameNum
		{
			get { return _BeginFrameNum; }
			set {
				if (_BeginFrameNum != value) {
					OnBeginFrameNumChanging(value);
					SendPropertyChanging();
					_BeginFrameNum = value;
					SendPropertyChanged("BeginFrameNum");
					OnBeginFrameNumChanged();
				}
			}
		}
		
		partial void OnPacketTimeChanging(DateTime? value);
		partial void OnPacketTimeChanged();
		private DateTime? _PacketTime;
		[Column(Storage=@"_PacketTime", DbType=@"DateTime")]
		public DateTime? PacketTime
		{
			get { return _PacketTime; }
			set {
				if (_PacketTime != value) {
					OnPacketTimeChanging(value);
					SendPropertyChanging();
					_PacketTime = value;
					SendPropertyChanged("PacketTime");
					OnPacketTimeChanged();
				}
			}
		}
		
		partial void OnPacketTime_ms_Changing(int? value);
		partial void OnPacketTime_ms_Changed();
		private int? _PacketTime_ms_;
		[Column(Storage=@"_PacketTime_ms_", Name=@"[PacketTime(ms)]", DbType=@"Int")]
		public int? PacketTime_ms_
		{
			get { return _PacketTime_ms_; }
			set {
				if (_PacketTime_ms_ != value) {
					OnPacketTime_ms_Changing(value);
					SendPropertyChanging();
					_PacketTime_ms_ = value;
					SendPropertyChanged("PacketTime_ms_");
					OnPacketTime_ms_Changed();
				}
			}
		}
		
		partial void OnDumpForChanging(string value);
		partial void OnDumpForChanged();
		private string _DumpFor;
		[Column(Storage=@"_DumpFor", DbType=@"NVarChar(30)")]
		public string DumpFor
		{
			get { return _DumpFor; }
			set {
				if (_DumpFor != value) {
					OnDumpForChanging(value);
					SendPropertyChanging();
					_DumpFor = value;
					SendPropertyChanged("DumpFor");
					OnDumpForChanged();
				}
			}
		}
		
		partial void OnHandover_CommandChanging(int? value);
		partial void OnHandover_CommandChanged();
		private int? _Handover_Command;
		[Column(Storage=@"_Handover_Command", DbType=@"Int")]
		public int? Handover_Command
		{
			get { return _Handover_Command; }
			set {
				if (_Handover_Command != value) {
					OnHandover_CommandChanging(value);
					SendPropertyChanging();
					_Handover_Command = value;
					SendPropertyChanged("Handover_Command");
					OnHandover_CommandChanged();
				}
			}
		}
		
		partial void OnHandover_Command_timeChanging(string value);
		partial void OnHandover_Command_timeChanged();
		private string _Handover_Command_time;
		[Column(Storage=@"_Handover_Command_time", DbType=@"NVarChar(200)")]
		public string Handover_Command_time
		{
			get { return _Handover_Command_time; }
			set {
				if (_Handover_Command_time != value) {
					OnHandover_Command_timeChanging(value);
					SendPropertyChanging();
					_Handover_Command_time = value;
					SendPropertyChanged("Handover_Command_time");
					OnHandover_Command_timeChanged();
				}
			}
		}
		
		partial void OnHandover_Command_MsgTypeChanging(string value);
		partial void OnHandover_Command_MsgTypeChanged();
		private string _Handover_Command_MsgType;
		[Column(Storage=@"_Handover_Command_MsgType", DbType=@"NVarChar(200)")]
		public string Handover_Command_MsgType
		{
			get { return _Handover_Command_MsgType; }
			set {
				if (_Handover_Command_MsgType != value) {
					OnHandover_Command_MsgTypeChanging(value);
					SendPropertyChanging();
					_Handover_Command_MsgType = value;
					SendPropertyChanged("Handover_Command_MsgType");
					OnHandover_Command_MsgTypeChanged();
				}
			}
		}
		
		partial void OnnccChanging(string value);
		partial void OnnccChanged();
		private string _ncc;
		[Column(Storage=@"_ncc", DbType=@"NVarChar(2)")]
		public string ncc
		{
			get { return _ncc; }
			set {
				if (_ncc != value) {
					OnnccChanging(value);
					SendPropertyChanging();
					_ncc = value;
					SendPropertyChanged("ncc");
					OnnccChanged();
				}
			}
		}
		
		partial void OnbccChanging(string value);
		partial void OnbccChanged();
		private string _bcc;
		[Column(Storage=@"_bcc", DbType=@"NVarChar(2)")]
		public string bcc
		{
			get { return _bcc; }
			set {
				if (_bcc != value) {
					OnbccChanging(value);
					SendPropertyChanging();
					_bcc = value;
					SendPropertyChanged("bcc");
					OnbccChanged();
				}
			}
		}
		
		partial void Onbcch_arfcnChanging(string value);
		partial void Onbcch_arfcnChanged();
		private string _bcch_arfcn;
		[Column(Storage=@"_bcch_arfcn", DbType=@"NVarChar(10)")]
		public string bcch_arfcn
		{
			get { return _bcch_arfcn; }
			set {
				if (_bcch_arfcn != value) {
					Onbcch_arfcnChanging(value);
					SendPropertyChanging();
					_bcch_arfcn = value;
					SendPropertyChanged("bcch_arfcn");
					Onbcch_arfcnChanged();
				}
			}
		}
		
		partial void Onchd2_single_ch_ARFCNChanging(string value);
		partial void Onchd2_single_ch_ARFCNChanged();
		private string _chd2_single_ch_ARFCN;
		[Column(Storage=@"_chd2_single_ch_ARFCN", DbType=@"NVarChar(10)")]
		public string chd2_single_ch_ARFCN
		{
			get { return _chd2_single_ch_ARFCN; }
			set {
				if (_chd2_single_ch_ARFCN != value) {
					Onchd2_single_ch_ARFCNChanging(value);
					SendPropertyChanging();
					_chd2_single_ch_ARFCN = value;
					SendPropertyChanged("chd2_single_ch_ARFCN");
					Onchd2_single_ch_ARFCNChanged();
				}
			}
		}
		
		#endregion
	}
}

namespace Linq2SqlGeography
{	
	[Table(Name=@"dbo.Abis_MR")]
	public partial class Abis_MR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		#region Property Change Event Handling
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		public event PropertyChangingEventHandler PropertyChanging;
		public event PropertyChangedEventHandler PropertyChanged;
		
		public virtual void SendPropertyChanging()
		{
			if (PropertyChanging != null) {
				PropertyChanging(this, emptyChangingEventArgs);
			}
		}
			
		public virtual void SendPropertyChanged(String propertyName)
		{
			if (PropertyChanged != null) {
				PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		#endregion
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(ChangeAction action);
		#endregion

		#region Construction
		public Abis_MR()
		{
		}
		#endregion

		#region Column Mappings
		partial void OnFileNumChanging(int? value);
		partial void OnFileNumChanged();
		private int? _FileNum;
		[Column(Storage=@"_FileNum", DbType=@"Int")]
		public int? FileNum
		{
			get { return _FileNum; }
			set {
				if (_FileNum != value) {
					OnFileNumChanging(value);
					SendPropertyChanging();
					_FileNum = value;
					SendPropertyChanged("FileNum");
					OnFileNumChanged();
				}
			}
		}
		
		partial void OnPacketNumChanging(int? value);
		partial void OnPacketNumChanged();
		private int? _PacketNum;
		[Column(Storage=@"_PacketNum", DbType=@"Int")]
		public int? PacketNum
		{
			get { return _PacketNum; }
			set {
				if (_PacketNum != value) {
					OnPacketNumChanging(value);
					SendPropertyChanging();
					_PacketNum = value;
					SendPropertyChanged("PacketNum");
					OnPacketNumChanged();
				}
			}
		}
		
		partial void OnBeginFrameNumChanging(int? value);
		partial void OnBeginFrameNumChanged();
		private int? _BeginFrameNum;
		[Column(Storage=@"_BeginFrameNum", DbType=@"Int")]
		public int? BeginFrameNum
		{
			get { return _BeginFrameNum; }
			set {
				if (_BeginFrameNum != value) {
					OnBeginFrameNumChanging(value);
					SendPropertyChanging();
					_BeginFrameNum = value;
					SendPropertyChanged("BeginFrameNum");
					OnBeginFrameNumChanged();
				}
			}
		}
		
		partial void OnPacketTimeChanging(DateTime? value);
		partial void OnPacketTimeChanged();
		private DateTime? _PacketTime;
		[Column(Storage=@"_PacketTime", DbType=@"DateTime")]
		public DateTime? PacketTime
		{
			get { return _PacketTime; }
			set {
				if (_PacketTime != value) {
					OnPacketTimeChanging(value);
					SendPropertyChanging();
					_PacketTime = value;
					SendPropertyChanged("PacketTime");
					OnPacketTimeChanged();
				}
			}
		}
		
		partial void OnPacketTime_ms_Changing(int? value);
		partial void OnPacketTime_ms_Changed();
		private int? _PacketTime_ms_;
		[Column(Storage=@"_PacketTime_ms_", Name=@"[PacketTime(ms)]", DbType=@"Int")]
		public int? PacketTime_ms_
		{
			get { return _PacketTime_ms_; }
			set {
				if (_PacketTime_ms_ != value) {
					OnPacketTime_ms_Changing(value);
					SendPropertyChanging();
					_PacketTime_ms_ = value;
					SendPropertyChanged("PacketTime_ms_");
					OnPacketTime_ms_Changed();
				}
			}
		}
		
		partial void OnDumpForChanging(string value);
		partial void OnDumpForChanged();
		private string _DumpFor;
		[Column(Storage=@"_DumpFor", DbType=@"NVarChar(30)")]
		public string DumpFor
		{
			get { return _DumpFor; }
			set {
				if (_DumpFor != value) {
					OnDumpForChanging(value);
					SendPropertyChanging();
					_DumpFor = value;
					SendPropertyChanged("DumpFor");
					OnDumpForChanged();
				}
			}
		}
		
		partial void OnMeasurement_ReportChanging(int? value);
		partial void OnMeasurement_ReportChanged();
		private int? _Measurement_Report;
		[Column(Storage=@"_Measurement_Report", DbType=@"Int")]
		public int? Measurement_Report
		{
			get { return _Measurement_Report; }
			set {
				if (_Measurement_Report != value) {
					OnMeasurement_ReportChanging(value);
					SendPropertyChanging();
					_Measurement_Report = value;
					SendPropertyChanged("Measurement_Report");
					OnMeasurement_ReportChanged();
				}
			}
		}
		
		partial void OnMeasurement_Report_timeChanging(string value);
		partial void OnMeasurement_Report_timeChanged();
		private string _Measurement_Report_time;
		[Column(Storage=@"_Measurement_Report_time", DbType=@"NVarChar(200)")]
		public string Measurement_Report_time
		{
			get { return _Measurement_Report_time; }
			set {
				if (_Measurement_Report_time != value) {
					OnMeasurement_Report_timeChanging(value);
					SendPropertyChanging();
					_Measurement_Report_time = value;
					SendPropertyChanged("Measurement_Report_time");
					OnMeasurement_Report_timeChanged();
				}
			}
		}
		
		partial void OncellChanging(string value);
		partial void OncellChanged();
		private string _cell;
		[Column(Storage=@"_cell", DbType=@"NVarChar(200)")]
		public string cell
		{
			get { return _cell; }
			set {
				if (_cell != value) {
					OncellChanging(value);
					SendPropertyChanging();
					_cell = value;
					SendPropertyChanged("cell");
					OncellChanged();
				}
			}
		}
		
		partial void Onbs_powerChanging(string value);
		partial void Onbs_powerChanged();
		private string _bs_power;
		[Column(Storage=@"_bs_power", DbType=@"NVarChar(200)")]
		public string bs_power
		{
			get { return _bs_power; }
			set {
				if (_bs_power != value) {
					Onbs_powerChanging(value);
					SendPropertyChanging();
					_bs_power = value;
					SendPropertyChanged("bs_power");
					Onbs_powerChanged();
				}
			}
		}
		
		partial void Onms_powerChanging(string value);
		partial void Onms_powerChanged();
		private string _ms_power;
		[Column(Storage=@"_ms_power", DbType=@"NVarChar(200)")]
		public string ms_power
		{
			get { return _ms_power; }
			set {
				if (_ms_power != value) {
					Onms_powerChanging(value);
					SendPropertyChanging();
					_ms_power = value;
					SendPropertyChanged("ms_power");
					Onms_powerChanged();
				}
			}
		}
		
		partial void Onact_taChanging(int? value);
		partial void Onact_taChanged();
		private int? _act_ta;
		[Column(Storage=@"_act_ta", DbType=@"Int")]
		public int? act_ta
		{
			get { return _act_ta; }
			set {
				if (_act_ta != value) {
					Onact_taChanging(value);
					SendPropertyChanging();
					_act_ta = value;
					SendPropertyChanged("act_ta");
					Onact_taChanged();
				}
			}
		}
		
		partial void Ondtx_usedChanging(string value);
		partial void Ondtx_usedChanged();
		private string _dtx_used;
		[Column(Storage=@"_dtx_used", DbType=@"NVarChar(200)")]
		public string dtx_used
		{
			get { return _dtx_used; }
			set {
				if (_dtx_used != value) {
					Ondtx_usedChanging(value);
					SendPropertyChanging();
					_dtx_used = value;
					SendPropertyChanged("dtx_used");
					Ondtx_usedChanged();
				}
			}
		}
		
		partial void Onrxlev_full_serv_cellChanging(int? value);
		partial void Onrxlev_full_serv_cellChanged();
		private int? _rxlev_full_serv_cell;
		[Column(Storage=@"_rxlev_full_serv_cell", DbType=@"Int")]
		public int? rxlev_full_serv_cell
		{
			get { return _rxlev_full_serv_cell; }
			set {
				if (_rxlev_full_serv_cell != value) {
					Onrxlev_full_serv_cellChanging(value);
					SendPropertyChanging();
					_rxlev_full_serv_cell = value;
					SendPropertyChanged("rxlev_full_serv_cell");
					Onrxlev_full_serv_cellChanged();
				}
			}
		}
		
		partial void Onrxlev_sub_serv_cellChanging(int? value);
		partial void Onrxlev_sub_serv_cellChanged();
		private int? _rxlev_sub_serv_cell;
		[Column(Storage=@"_rxlev_sub_serv_cell", DbType=@"Int")]
		public int? rxlev_sub_serv_cell
		{
			get { return _rxlev_sub_serv_cell; }
			set {
				if (_rxlev_sub_serv_cell != value) {
					Onrxlev_sub_serv_cellChanging(value);
					SendPropertyChanging();
					_rxlev_sub_serv_cell = value;
					SendPropertyChanged("rxlev_sub_serv_cell");
					Onrxlev_sub_serv_cellChanged();
				}
			}
		}
		
		partial void Onbsic0Changing(int? value);
		partial void Onbsic0Changed();
		private int? _bsic0;
		[Column(Storage=@"_bsic0", DbType=@"Int")]
		public int? bsic0
		{
			get { return _bsic0; }
			set {
				if (_bsic0 != value) {
					Onbsic0Changing(value);
					SendPropertyChanging();
					_bsic0 = value;
					SendPropertyChanged("bsic0");
					Onbsic0Changed();
				}
			}
		}
		
		partial void Onbsic1Changing(int? value);
		partial void Onbsic1Changed();
		private int? _bsic1;
		[Column(Storage=@"_bsic1", DbType=@"Int")]
		public int? bsic1
		{
			get { return _bsic1; }
			set {
				if (_bsic1 != value) {
					Onbsic1Changing(value);
					SendPropertyChanging();
					_bsic1 = value;
					SendPropertyChanged("bsic1");
					Onbsic1Changed();
				}
			}
		}
		
		partial void Onbsic2Changing(int? value);
		partial void Onbsic2Changed();
		private int? _bsic2;
		[Column(Storage=@"_bsic2", DbType=@"Int")]
		public int? bsic2
		{
			get { return _bsic2; }
			set {
				if (_bsic2 != value) {
					Onbsic2Changing(value);
					SendPropertyChanging();
					_bsic2 = value;
					SendPropertyChanged("bsic2");
					Onbsic2Changed();
				}
			}
		}
		
		partial void Onbsic3Changing(int? value);
		partial void Onbsic3Changed();
		private int? _bsic3;
		[Column(Storage=@"_bsic3", DbType=@"Int")]
		public int? bsic3
		{
			get { return _bsic3; }
			set {
				if (_bsic3 != value) {
					Onbsic3Changing(value);
					SendPropertyChanging();
					_bsic3 = value;
					SendPropertyChanged("bsic3");
					Onbsic3Changed();
				}
			}
		}
		
		partial void Onbsic4Changing(int? value);
		partial void Onbsic4Changed();
		private int? _bsic4;
		[Column(Storage=@"_bsic4", DbType=@"Int")]
		public int? bsic4
		{
			get { return _bsic4; }
			set {
				if (_bsic4 != value) {
					Onbsic4Changing(value);
					SendPropertyChanging();
					_bsic4 = value;
					SendPropertyChanged("bsic4");
					Onbsic4Changed();
				}
			}
		}
		
		partial void Onbsic5Changing(int? value);
		partial void Onbsic5Changed();
		private int? _bsic5;
		[Column(Storage=@"_bsic5", DbType=@"Int")]
		public int? bsic5
		{
			get { return _bsic5; }
			set {
				if (_bsic5 != value) {
					Onbsic5Changing(value);
					SendPropertyChanging();
					_bsic5 = value;
					SendPropertyChanged("bsic5");
					Onbsic5Changed();
				}
			}
		}
		
		partial void Onbcch0Changing(int? value);
		partial void Onbcch0Changed();
		private int? _bcch0;
		[Column(Storage=@"_bcch0", DbType=@"Int")]
		public int? bcch0
		{
			get { return _bcch0; }
			set {
				if (_bcch0 != value) {
					Onbcch0Changing(value);
					SendPropertyChanging();
					_bcch0 = value;
					SendPropertyChanged("bcch0");
					Onbcch0Changed();
				}
			}
		}
		
		partial void Onbcch1Changing(int? value);
		partial void Onbcch1Changed();
		private int? _bcch1;
		[Column(Storage=@"_bcch1", DbType=@"Int")]
		public int? bcch1
		{
			get { return _bcch1; }
			set {
				if (_bcch1 != value) {
					Onbcch1Changing(value);
					SendPropertyChanging();
					_bcch1 = value;
					SendPropertyChanged("bcch1");
					Onbcch1Changed();
				}
			}
		}
		
		partial void Onbcch2Changing(int? value);
		partial void Onbcch2Changed();
		private int? _bcch2;
		[Column(Storage=@"_bcch2", DbType=@"Int")]
		public int? bcch2
		{
			get { return _bcch2; }
			set {
				if (_bcch2 != value) {
					Onbcch2Changing(value);
					SendPropertyChanging();
					_bcch2 = value;
					SendPropertyChanged("bcch2");
					Onbcch2Changed();
				}
			}
		}
		
		partial void Onbcch3Changing(int? value);
		partial void Onbcch3Changed();
		private int? _bcch3;
		[Column(Storage=@"_bcch3", DbType=@"Int")]
		public int? bcch3
		{
			get { return _bcch3; }
			set {
				if (_bcch3 != value) {
					Onbcch3Changing(value);
					SendPropertyChanging();
					_bcch3 = value;
					SendPropertyChanged("bcch3");
					Onbcch3Changed();
				}
			}
		}
		
		partial void Onbcch4Changing(int? value);
		partial void Onbcch4Changed();
		private int? _bcch4;
		[Column(Storage=@"_bcch4", DbType=@"Int")]
		public int? bcch4
		{
			get { return _bcch4; }
			set {
				if (_bcch4 != value) {
					Onbcch4Changing(value);
					SendPropertyChanging();
					_bcch4 = value;
					SendPropertyChanged("bcch4");
					Onbcch4Changed();
				}
			}
		}
		
		partial void Onbcch5Changing(int? value);
		partial void Onbcch5Changed();
		private int? _bcch5;
		[Column(Storage=@"_bcch5", DbType=@"Int")]
		public int? bcch5
		{
			get { return _bcch5; }
			set {
				if (_bcch5 != value) {
					Onbcch5Changing(value);
					SendPropertyChanging();
					_bcch5 = value;
					SendPropertyChanged("bcch5");
					Onbcch5Changed();
				}
			}
		}
		
		partial void Onrxlev0Changing(int? value);
		partial void Onrxlev0Changed();
		private int? _rxlev0;
		[Column(Storage=@"_rxlev0", DbType=@"Int")]
		public int? rxlev0
		{
			get { return _rxlev0; }
			set {
				if (_rxlev0 != value) {
					Onrxlev0Changing(value);
					SendPropertyChanging();
					_rxlev0 = value;
					SendPropertyChanged("rxlev0");
					Onrxlev0Changed();
				}
			}
		}
		
		partial void Onrxlev1Changing(int? value);
		partial void Onrxlev1Changed();
		private int? _rxlev1;
		[Column(Storage=@"_rxlev1", DbType=@"Int")]
		public int? rxlev1
		{
			get { return _rxlev1; }
			set {
				if (_rxlev1 != value) {
					Onrxlev1Changing(value);
					SendPropertyChanging();
					_rxlev1 = value;
					SendPropertyChanged("rxlev1");
					Onrxlev1Changed();
				}
			}
		}
		
		partial void Onrxlev2Changing(int? value);
		partial void Onrxlev2Changed();
		private int? _rxlev2;
		[Column(Storage=@"_rxlev2", DbType=@"Int")]
		public int? rxlev2
		{
			get { return _rxlev2; }
			set {
				if (_rxlev2 != value) {
					Onrxlev2Changing(value);
					SendPropertyChanging();
					_rxlev2 = value;
					SendPropertyChanged("rxlev2");
					Onrxlev2Changed();
				}
			}
		}
		
		partial void Onrxlev3Changing(int? value);
		partial void Onrxlev3Changed();
		private int? _rxlev3;
		[Column(Storage=@"_rxlev3", DbType=@"Int")]
		public int? rxlev3
		{
			get { return _rxlev3; }
			set {
				if (_rxlev3 != value) {
					Onrxlev3Changing(value);
					SendPropertyChanging();
					_rxlev3 = value;
					SendPropertyChanged("rxlev3");
					Onrxlev3Changed();
				}
			}
		}
		
		partial void Onrxlev4Changing(int? value);
		partial void Onrxlev4Changed();
		private int? _rxlev4;
		[Column(Storage=@"_rxlev4", DbType=@"Int")]
		public int? rxlev4
		{
			get { return _rxlev4; }
			set {
				if (_rxlev4 != value) {
					Onrxlev4Changing(value);
					SendPropertyChanging();
					_rxlev4 = value;
					SendPropertyChanged("rxlev4");
					Onrxlev4Changed();
				}
			}
		}
		
		partial void Onrxlev5Changing(int? value);
		partial void Onrxlev5Changed();
		private int? _rxlev5;
		[Column(Storage=@"_rxlev5", DbType=@"Int")]
		public int? rxlev5
		{
			get { return _rxlev5; }
			set {
				if (_rxlev5 != value) {
					Onrxlev5Changing(value);
					SendPropertyChanging();
					_rxlev5 = value;
					SendPropertyChanged("rxlev5");
					Onrxlev5Changed();
				}
			}
		}
		
		#endregion
	}
}
#pragma warning restore 1591